<?xml version="1.0" ?>

<!-- INCLUDES -->
<!-- <xacro:include filename="inertia.urdf.xacro" /> -->

<robot name="palletron_gazebo" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="rplidar_palletron.urdf.xacro"/>
  <xacro:include filename="inertia.urdf.xacro" />
  <xacro:include filename="caster_wheel.urdf.xacro"/>

  <xacro:property name="caster_radius" value="0.07"/>
  <xacro:property name="caster_ground_offset" value="0.0005"/>
  <xacro:property name="wheel_radius" value="0.13"/>

  <material name="black">
      <color rgba="0.0 0.0 0.0 1.0"/>
  </material>

  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>

  <material name="light_black">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>

  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>

  <material name="orange">
    <color rgba="1.0 0.4235 0.0392 1.0"/>
  </material>

  <material name="brown">
    <color rgba="0.8706 0.8118 0.7647 1.0"/>
  </material>

  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>

  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link" />
    <origin xyz="0 0 0.13" rpy="0 0 0"/>
  </joint>

  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.7 0.7 0.7"/>
      </geometry>
      <material name="blue"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.7 0.7 0.7"/>
      </geometry>
    </collision>

    <!-- TODO: update according to real base properties -->
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="15"/>
      <!-- <xacro:solid_cuboid_inertia m="15" h="7.0" d="7.0" w="7.0" /> -->
    </inertial>
  </link>

  <joint name="wheel_left_joint" type="continuous"> <!--type="continuous"-->
    <origin xyz="0 0.33 -0.30" rpy="-1.57 0 0"/>
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="wheel_left_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.13" length="0.05"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.13" length="0.05"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <!-- TODO: update according to real wheel properties -->
      <mass value="0.703"/>
      <inertia ixx="0.0015" ixy="0.0" ixz="0.0"
               iyy="0.0009" iyz="0.0"
               izz="0.0009"/>
    </inertial>
  </link>

  <joint name="wheel_right_joint" type="continuous"> <!--type="continuous"-->
  <axis xyz="0 0 1"/>
    <origin xyz="0.0 -0.33 -0.30" rpy="-1.57 0 0"/>
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
  </joint>

  <link name="wheel_right_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.13" length="0.05"/>
      </geometry>
      <material name="dark"/>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.13" length="0.05"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <!-- TODO: update according to real wheel properties -->
      <mass value="0.703"/>
      <inertia ixx="0.0015" ixy="0.0" ixz="0.0"
               iyy="0.0009" iyz="0.0"
               izz="0.0009"/>
    </inertial>
  </link>

  <xacro:caster name="front_left_caster" radius="${caster_radius}" x_offset="0.20" y_offset="0.20" z_offset="${-0.30 + caster_ground_offset - (wheel_radius - caster_radius)}" parent="base_link"/>
  <xacro:caster name="rear_left_caster" radius="${caster_radius}" x_offset="0.20" y_offset="-0.20" z_offset="${-0.30 + caster_ground_offset - (wheel_radius - caster_radius)}" parent="base_link"/>
  <xacro:caster name="front_right_caster" radius="${caster_radius}" x_offset="-0.20" y_offset="0.20" z_offset="${-0.30 + caster_ground_offset - (wheel_radius - caster_radius)}" parent="base_link"/>
  <xacro:caster name="rear_right_caster" radius="${caster_radius}" x_offset="-0.20" y_offset="-0.20" z_offset="${-0.30 + caster_ground_offset - (wheel_radius - caster_radius)}" parent="base_link"/>
 
  <gazebo reference="base_link">
    <selfCollide>false</selfCollide>
    <material>Gazebo/Blue</material>
  </gazebo>

  <xacro:laser_sensor
        update_rate="5"
        ray_count="360"
        min_angle="0"
        max_angle="6.28"
        min_range="0.12"
        max_range="8.0"
        pos_x="0"
        pos_y="0"
        pos_z="0.45"
        topic="palletron/scan"/>

   <gazebo reference="wheel_left_link">
      <selfCollide>false</selfCollide>
      <mu1>2</mu1>
      <mu2>2</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
  </gazebo>  

   <gazebo reference="wheel_right_link">
      <selfCollide>false</selfCollide>
      <mu1>2</mu1>
      <mu2>2</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
  </gazebo> 

  <gazebo>
  
    <plugin name="palletron_diff_drive" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <!--since gazebo_plugins publish tf topic in global namespace /tf only and it
          cannot be remapped like (namespace/tf) through launch arguments -->
        <remapping>/tf:=tf</remapping>
      </ros>

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.66</wheel_separation>
      <wheel_diameter>0.13</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>

    <plugin name="palletron_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin>
  </gazebo>
</robot>
